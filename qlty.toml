# Qlty configuration file
# Simplified and corrected from original Code Climate migration

[rules]
# Complexity and maintainability checks
argument-count = { enabled = true, threshold = 4 }
complex-logic = { enabled = true, threshold = 4 }
file-lines = { enabled = true, threshold = 300 }
method-complexity = { enabled = true, threshold = 5 }
method-count = { enabled = true, threshold = 20 }
method-lines = { enabled = true, threshold = 50 }
nested-control-flow = { enabled = true, threshold = 4 }
return-statements = { enabled = true, threshold = 4 }
similar-code = { enabled = true }
identical-code = { enabled = true }

[ignore]
# Exclude non-source, generated, third-party, and test assets
paths = [
    # VCS / CI / virtual envs / caches
    "**/.git/",
    "**/.github/",
    "**/.mypy_cache/",
    "**/.pytest_cache/",
    "**/.tox/",
    "**/.venv/",
    "venv/",
    "env/",
    "**/__pycache__/",
    "**/.eggs/",
    "**/*.egg-info/",

    # Build and coverage artifacts
    "build/",
    "dist/",
    "target/",
    "coverage/",
    "coverage.*",

    # Project non-source directories
    "deploy/",
    "docs/",
    "serve/",
    "examples/",
    "vendor/",

    # Tests
    "tests/",
    "services_tests/",

    # Static assets and templates
    "**/static/",
    "**/templates/",

    # Config and packaging files
    "setup.py",
    "setup.cfg",
    "pyproject.toml",
    "versioneer.py",
    "./versioneer.py",
    "hedweb/_version.py",
    "**/_version.py",
    "MANIFEST.in",
    "mkdocs.yml",
    "qlty.toml",
    ".coveragerc",
    "codespellrc",

    # Documentation and text files
    "**/README*",
    "**/CHANGELOG*",
    "**/LICENSE*",
    "**/CONTRIBUTING*",
    "**/CODE_OF_CONDUCT*",
    "**/CONTRIBUTORS*",
    "**/AUTHORS*",
    "**/*.md",
    "**/*.rst",
    "**/*.txt",
    "**/*.yml",
    "**/*.yaml",
    "**/*.html",

    # Repo-specific misc
    "config_template.py",
]

[coverage]
# Python projects typically emit Cobertura XML via `coverage xml -o coverage.xml`
formats = ["cobertura"]
paths = ["coverage.xml"]
